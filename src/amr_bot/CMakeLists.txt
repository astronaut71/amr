cmake_minimum_required(VERSION 3.8)
project(amr_bot)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(xacro REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)

add_executable(cmd_vel_to_odom_node src/cmd_vel_to_odom_node.cpp)
ament_target_dependencies(cmd_vel_to_odom_node rclcpp std_msgs geometry_msgs nav_msgs tf2_geometry_msgs tf2_ros)

add_executable(quatern_to_rpy src/quatern_to_rpy.cpp)
ament_target_dependencies(quatern_to_rpy rclcpp std_msgs geometry_msgs nav_msgs tf2_geometry_msgs tf2_ros)

install(TARGETS cmd_vel_to_odom_node quatern_to_rpy DESTINATION lib/${PROJECT_NAME})


install(
  DIRECTORY src launch rviz config
  DESTINATION share/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()